// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace FeedAPI.Models
{
    public partial class FeedingContext : DbContext
    {
        public FeedingContext()
        {
        }

        public FeedingContext(DbContextOptions<FeedingContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ClientInformation> ClientInformation { get; set; }
        public virtual DbSet<FeedInformation> FeedInformation { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientInformation>(entity =>
            {
                entity.ToTable("client_information");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("address");

                entity.Property(e => e.Compiled).HasColumnName("compiled");

                entity.Property(e => e.CreationTime)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("creation_time")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.Invoice)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("invoice");

                entity.Property(e => e.IsDeleted)
                    .HasColumnName("is_deleted")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mobile");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Number)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("number");

                entity.Property(e => e.Person)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("person");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("telephone");
            });

            modelBuilder.Entity<FeedInformation>(entity =>
            {
                entity.ToTable("feed_information");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Class)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("class");

                entity.Property(e => e.Cost)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("cost");

                entity.Property(e => e.CreationTime)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("creation_time")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.IsDeleted)
                    .HasColumnName("is_deleted")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("item_name");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("item_number");

                entity.Property(e => e.Length)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("length");

                entity.Property(e => e.Manufacturer)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("manufacturer");

                entity.Property(e => e.Material)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.Quantity)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("quantity");

                entity.Property(e => e.Raise)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("raise");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("weight");

                entity.Property(e => e.Wire)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("wire");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}